// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Driver {
  id              String @id @default(uuid())
  firstName       String
  lastName        String
  nationalId      String
  phoneNumber     String
  bankAccount     String
  degree          Int // degree 
  militaryService Int // سربازی
  sex             Int

  primaryVehicle   Connection[] @relation("primaryVehicle")
  secondaryVehicle Connection[] @relation("secondaryVehicle")
  createdAt        DateTime     @default(now())
}

model Vehicle {
  id                 String       @id @default(uuid())
  vehicleName        String // اسم خودرو
  year               Int
  licensePlate       String // پلاک
  insuranceDate      DateTime? // تاریخ بیمه
  insuranceNo        String // شماره بیمه
  technicalCheckDate DateTime? // تاریخ معاینه فنی
  ChdNo              Int // کد خودرو
  Connetion          Connection[]
  createdAt          DateTime     @default(now())
}

model Route {
  id       String @id @default(uuid())
  path     String // مسیر حرکت
  stations String // ایستگاه ها

  Connetion Connection[]
  createdAt DateTime     @default(now())
}

model Connection {
  id              String  @id @default(uuid())
  company         Int // شرکت
  shiftType       Int
  primaryDriver   Driver  @relation("primaryVehicle", fields: [primaryDriverId], references: [id])
  secondaryDriver Driver  @relation("secondaryVehicle", fields: [secondaryDriverId], references: [id])
  vehicle         Vehicle @relation(fields: [vehicleId], references: [id])
  route           Route   @relation(fields: [routeId], references: [id])

  primaryDriverId   String
  secondaryDriverId String
  vehicleId         String
  routeId           String

  createdAt DateTime @default(now())
}
